name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  Build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-11.0
          - windows-latest
        node_version:
          - 12
        node_arch:
          - x64
        include:
          - os: windows-2016
            node_version: 12
            node_arch: x86
          # - os: macos-11.0
          #   node_version: 15
          #   node_arch: arm64
    steps:
      - uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node_version }}-${{ matrix.node_arch }}-${{ hashFiles('package.json') }}

      # - name: Install Compiler for Ubuntu 16.04
      #   if: ${{ contains(matrix.os, 'ubuntu-16.04') }}
      #   run: |
      #     sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
      #     sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-9 10
      #     sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-9 10
      #     sudo update-alternatives --config clang
      #     sudo update-alternatives --config clang++

      # - name: Set Compiler for Ubuntu
      #   run: |
      #     echo "CC=clang" >> $GITHUB_ENV
      #     echo "CXX=clang++" >> $GITHUB_ENV

      - name: Install Node
        uses: actions/setup-node@v2.1.3
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.node_arch }}

      - name: Install dependencies and build
        run: npm install

      - name: Prebuildify x64
        if: ${{ contains(matrix.node_version, '12') && contains(matrix.node_arch, 'x64') }}
        run: npm run native.prebuild

      - name: Prebuildify x86
        if: ${{ contains(matrix.node_version, '12') && contains(matrix.node_arch, 'x86') }}
        run: npm run native.prebuild-ia32

      # - name: Prebuildify arm64
      #   if: ${{ contains(matrix.node_version, '15') && contains(matrix.node_arch, 'arm64') }}
      #   run: npm run native.prebuild-arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v2.0.1
        with:
          path: ./prebuilds

  Test:
    needs: Build
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-11.0
          - windows-latest
        node_version:
          - 10
          - 12
          - 14
        node_arch:
          - x64
        include:
          - os: windows-2016
            node_version: 12
            node_arch: x86
          - os: ubuntu-16.04
            node_version: 12
          - os: macos-10.15
            node_version: 12
          # Node arm64 doesn't exist yet
          # - os: macos-11.0
          #   node_version: 15
          #   node_arch: arm64
    steps:
      - uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node_version }}-${{ matrix.node_arch }}-${{ hashFiles('package.json') }}

      - name: Install Node
        uses: actions/setup-node@v2.1.3
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.node_arch }}

      - name: Install dependencies only
        run: |
          npm install --ignore-scripts
          npm run js.build

      - name: Download articats
        uses: actions/download-artifact@v2

      - name: Install prebuilds
        shell: bash
        run: |
          rm -rf build
          mkdir prebuilds
          mv artifact/* prebuilds/
          ls prebuilds

      - name: Run tests
        run: npm run test

      - name: Run benchmarks
        if: ${{ !contains(matrix.node_arch, 'x86') }} # https://github.com/npm/npm-lifecycle/issues/54
        run: npm run benchmark

  Lint:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Commit lint âœ¨
        uses: wagoid/commitlint-github-action@v2

      - name: Install dependencies
        run: npm install

      - name: Format âœ¨
        run: npm run test.format

      - name: Lint âœ¨
        run: npm run test.lint

  Skip:
    if: contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip ci
